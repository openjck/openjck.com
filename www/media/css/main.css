/* This is especially helpful when vertically centering the main content, as it
   allows us to change the main content padding without doing any math.

   http://www.paulirish.com/2012/box-sizing-border-box-ftw/ */
html {
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}

body {
    background: #38648b url('../img/noise.png');
    font-family: Helvetica, Arial, sans-serif;
    font-size: 1.5em;
    margin: 0 auto;
    max-width: 700px;
    padding: 25px;
}

body, a {
    color: #fff;
}

h1 {
    font-size: 1.4em;
    letter-spacing: .03em;
    margin: 0;
    text-align: center;
}

p {
    line-height: 1.5;
    margin: .8rem 0 .6rem;
    text-align: center;
}

ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    text-align: center;
}

li {
    display: inline-block;
}

li:first-child {
    margin-left: 0;
}

/* External site button and label */
li a {
    display: block;
    font-size: 1.1em;
    text-decoration: none;

    /* Give the buttons padding, but also offset that padding with an equivalent
       negative margin-bottom. Without the offset, the padding would add space
       below the main content, and the main content would not be perfectly
       centered vertically. */
    padding: .9em;
    margin-bottom: -.9em;
}

/* External site label */
li h2 {
    font-size: .8rem;
    font-weight: normal;
    margin: .5em 0;
}


/*** Icons ***/

#sites a:before {
    font-family: FontAwesome;
}

#blog a:before {
    content: '\f022';
}

#github a:before {
    content: '\f09b';
}

#twitter a:before {
    content: '\f099';
}

#linkedin a:before {
    content: '\f08c';
}

#photos a:before {
    content: '\f030';
}

#email a:before {
    content: '\f0e0';
}


/*** Vertically center ***/

html {
    height: 100%;
    width: 100%;
}

body {
    display: table;
    height: 100%;
}

#wrap {
    display: table-cell;
    vertical-align: middle;
}

/* 700px = main content width */
@media all and (max-width: 700px) {
    li {
        width: 50%;
        float: left;
    }
}

/* 400px = width at which two columns leave too much whitespace */
@media all and (min-width: 400px) and (max-width: 700px) {
    li {
        width: 33%;
    }
}

@media all and (max-width: 400px) {
    #wrap {
        vertical-align: top;
    }
}
